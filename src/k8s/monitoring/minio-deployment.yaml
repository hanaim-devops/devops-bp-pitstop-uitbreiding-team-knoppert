apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: monitoring
  labels:
    app: minio
spec:
  type: NodePort
  ports:
    - port: 9000
      targetPort: 9000
      nodePort: 30902
      name: api
    - port: 9001
      targetPort: 9001
      nodePort: 30901
      name: console
  selector:
    app: minio
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  namespace: monitoring
  labels:
    app: minio
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
        - name: minio
          image: minio/minio
          args:
            - server
            - /data
            - "--console-address"
            - ":9001"
          env:
            - name: MINIO_ROOT_USER
              value: minio
            - name: MINIO_ROOT_PASSWORD
              value: minio123
          ports:
            - containerPort: 9000
              name: api
            - containerPort: 9001
              name: console
          volumeMounts:
            - name: minio-data
              mountPath: /data
        - name: create-bucket
          image: minio/mc
          command: ["sh", "-c"]
          args:
            - |
              # Wacht tot MinIO beschikbaar is
              until mc alias set myminio http://localhost:9000 minio minio123; do
                sleep 5
              done
              # Maak de bucket aan
              mc mb myminio/thanos
              # Houd de container draaiende
              sleep infinity
          env:
            - name: MINIO_ROOT_USER
              value: minio
            - name: MINIO_ROOT_PASSWORD
              value: minio123
      volumes:
        - name: minio-data
          emptyDir: {}
